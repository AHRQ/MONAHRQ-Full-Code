//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqConfigurationSection Configuration Section.
    /// </summary>
    public partial class MonahrqConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the MonahrqConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqConfigurationSectionSectionName = "MonahrqConfigurationSection";
        
        /// <summary>
        /// The XML path of the MonahrqConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqConfigurationSectionSectionPath = "MonahrqConfigurationSectionGroup/MonahrqConfigurationSection";
        
        /// <summary>
        /// Gets the MonahrqConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection Instance
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region RebuildDatabase Property
        /// <summary>
        /// The XML name of the <see cref="RebuildDatabase"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string RebuildDatabasePropertyName = "rebuildDatabase";
        
        /// <summary>
        /// Gets or sets the RebuildDatabase.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.ComponentModel.DescriptionAttribute("The RebuildDatabase.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.RebuildDatabasePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool RebuildDatabase
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.RebuildDatabasePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.RebuildDatabasePropertyName] = value;
            }
        }
        #endregion
        
        #region LongTimeout Property
        /// <summary>
        /// The XML name of the <see cref="LongTimeout"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string LongTimeoutPropertyName = "longTimeout";
        
        /// <summary>
        /// Gets or sets the LongTimeout.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The LongTimeout.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LongTimeoutPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="00:05:00")]
        public virtual global::System.TimeSpan LongTimeout
        {
            get
            {
                return ((global::System.TimeSpan)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LongTimeoutPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LongTimeoutPropertyName] = value;
            }
        }
        #endregion
        
        #region ShortTimeout Property
        /// <summary>
        /// The XML name of the <see cref="ShortTimeout"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ShortTimeoutPropertyName = "shortTimeout";
        
        /// <summary>
        /// Gets or sets the ShortTimeout.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ShortTimeout.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ShortTimeoutPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="00:00:30")]
        public virtual global::System.TimeSpan ShortTimeout
        {
            get
            {
                return ((global::System.TimeSpan)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ShortTimeoutPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ShortTimeoutPropertyName] = value;
            }
        }
        #endregion
        
        #region LastFolder Property
        /// <summary>
        /// The XML name of the <see cref="LastFolder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string LastFolderPropertyName = "lastFolder";
        
        /// <summary>
        /// Gets or sets the LastFolder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The LastFolder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LastFolderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="")]
        public virtual string LastFolder
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LastFolderPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.LastFolderPropertyName] = value;
            }
        }
        #endregion
        
        #region BatchSize Property
        /// <summary>
        /// The XML name of the <see cref="BatchSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BatchSizePropertyName = "batchSize";
        
        /// <summary>
        /// Gets or sets the BatchSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The BatchSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BatchSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=1000)]
        public virtual int BatchSize
        {
            get
            {
                return ((int)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BatchSizePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BatchSizePropertyName] = value;
            }
        }
        #endregion
        
        #region DebugSql Property
        /// <summary>
        /// The XML name of the <see cref="DebugSql"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DebugSqlPropertyName = "debugSql";
        
        /// <summary>
        /// Gets or sets the DebugSql.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The DebugSql.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DebugSqlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool DebugSql
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DebugSqlPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DebugSqlPropertyName] = value;
            }
        }
        #endregion
        
        #region UpdateCheckUrl Property
        /// <summary>
        /// The XML name of the <see cref="UpdateCheckUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string UpdateCheckUrlPropertyName = "updateCheckUrl";
        
        /// <summary>
        /// Gets or sets the UpdateCheckUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.ComponentModel.DescriptionAttribute("The UpdateCheckUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UpdateCheckUrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="http://www.ahrq.gov/professionals/systems/monahrq/updates/update.xml")]
        public virtual string UpdateCheckUrl
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UpdateCheckUrlPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UpdateCheckUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region UseApiForPhysicians Property
        /// <summary>
        /// The XML name of the <see cref="UseApiForPhysicians"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string UseApiForPhysiciansPropertyName = "useApiForPhysicians";
        
        /// <summary>
        /// Gets or sets the UseApiForPhysicians.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The UseApiForPhysicians.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UseApiForPhysiciansPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool UseApiForPhysicians
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UseApiForPhysiciansPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.UseApiForPhysiciansPropertyName] = value;
            }
        }
        #endregion
        
        #region DataAccessComponentsInstalled Property
        /// <summary>
        /// The XML name of the <see cref="DataAccessComponentsInstalled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DataAccessComponentsInstalledPropertyName = "dataAccessComponentsInstalled";
        
        /// <summary>
        /// Gets or sets the DataAccessComponentsInstalled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The DataAccessComponentsInstalled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DataAccessComponentsInstalledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool DataAccessComponentsInstalled
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DataAccessComponentsInstalledPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.DataAccessComponentsInstalledPropertyName] = value;
            }
        }
        #endregion
        
        #region MonahrqVersion Property
        /// <summary>
        /// The XML name of the <see cref="MonahrqVersion"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqVersionPropertyName = "monahrqVersion";
        
        /// <summary>
        /// Gets or sets the MonahrqVersion.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.ComponentModel.DescriptionAttribute("The MonahrqVersion.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqVersionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string MonahrqVersion
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqVersionPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqVersionPropertyName] = value;
            }
        }
        #endregion
        
        #region MonahrqDemoSiteUrl Property
        /// <summary>
        /// The XML name of the <see cref="MonahrqDemoSiteUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqDemoSiteUrlPropertyName = "monahrqDemoSiteUrl";
        
        /// <summary>
        /// Gets or sets the MonahrqDemoSiteUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.ComponentModel.DescriptionAttribute("The MonahrqDemoSiteUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqDemoSiteUrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="http://www.ahrq.gov/professionals/systems/monahrq/demo/MONAHRQ60b2/index.html#")]
        public virtual string MonahrqDemoSiteUrl
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqDemoSiteUrlPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.MonahrqDemoSiteUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region NamedConnections Property
        /// <summary>
        /// The XML name of the <see cref="NamedConnections"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamedConnectionsPropertyName = "namedConnections";
        
        /// <summary>
        /// Gets or sets the NamedConnections.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The NamedConnections.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.NamedConnectionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.NamedConnectionElementCollection NamedConnections
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.NamedConnectionsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.NamedConnectionsPropertyName] = value;
            }
        }
        #endregion
        
        #region ContentTypes Property
        /// <summary>
        /// The XML name of the <see cref="ContentTypes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ContentTypesPropertyName = "contentTypes";
        
        /// <summary>
        /// Gets or sets the ContentTypes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ContentTypes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ContentTypesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElementCollection ContentTypes
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ContentTypesPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ContentTypesPropertyName] = value;
            }
        }
        #endregion
        
        #region EntityConnectionSettings Property
        /// <summary>
        /// The XML name of the <see cref="EntityConnectionSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string EntityConnectionSettingsPropertyName = "entityConnectionSettings";
        
        /// <summary>
        /// Gets or sets the EntityConnectionSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The EntityConnectionSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.EntityConnectionSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement EntityConnectionSettings
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.EntityConnectionSettingsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.EntityConnectionSettingsPropertyName] = value;
            }
        }
        #endregion
        
        #region Themes Property
        /// <summary>
        /// The XML name of the <see cref="Themes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ThemesPropertyName = "themes";
        
        /// <summary>
        /// Gets or sets the Themes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.ComponentModel.DescriptionAttribute("The Themes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ThemesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection Themes
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ThemesPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.ThemesPropertyName] = value;
            }
        }
        #endregion
        
        #region HospitalRegion Property
        /// <summary>
        /// The XML name of the <see cref="HospitalRegion"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string HospitalRegionPropertyName = "hospitalRegion";
        
        /// <summary>
        /// Gets or sets the HospitalRegion.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The HospitalRegion.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.HospitalRegionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.HospitalRegionElement HospitalRegion
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.HospitalRegionElement)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.HospitalRegionPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.HospitalRegionPropertyName] = value;
            }
        }
        #endregion
        
        #region WinQiConnectionSettings Property
        /// <summary>
        /// The XML name of the <see cref="WinQiConnectionSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WinQiConnectionSettingsPropertyName = "winQiConnectionSettings";
        
        /// <summary>
        /// Gets or sets the WinQiConnectionSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The WinQiConnectionSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.WinQiConnectionSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement WinQiConnectionSettings
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.WinQiConnectionSettingsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.WinQiConnectionSettingsPropertyName] = value;
            }
        }
        #endregion
        
        #region Banners Property
        /// <summary>
        /// The XML name of the <see cref="Banners"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BannersPropertyName = "banners";
        
        /// <summary>
        /// Gets or sets the Banners.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Banners.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BannersPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.MonahrqBannerElementCollection Banners
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BannersPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqConfigurationSection.BannersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The NamedConnectionElement Configuration Element.
    /// </summary>
    public partial class NamedConnectionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.DisplayNameAttribute("Connection Name")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region ConnectionString Property
        /// <summary>
        /// The XML name of the <see cref="ConnectionString"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ConnectionStringPropertyName = "connectionString";
        
        /// <summary>
        /// Gets or sets the ConnectionString.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ConnectionString.")]
        [global::System.ComponentModel.DisplayNameAttribute("Connection String")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ConnectionStringPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ConnectionString
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ConnectionStringPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ConnectionStringPropertyName] = value;
            }
        }
        #endregion
        
        #region HasHeader Property
        /// <summary>
        /// The XML name of the <see cref="HasHeader"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HasHeaderPropertyName = "hasHeader";

        /// <summary>
        /// Gets or sets the object from the datasource to present to the application
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The object from the datasource to present to the application")]
        [global::System.ComponentModel.DisplayNameAttribute("Select From")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.HasHeaderPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual bool HasHeader
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.HasHeaderPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.HasHeaderPropertyName] = value;
            }
        }
        #endregion

        #region SelectFrom Property
        /// <summary>
        /// The XML name of the <see cref="SelectFrom"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SelectFromPropertyName = "selectFrom";
        
        /// <summary>
        /// Gets or sets the object from the datasource to present to the application
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The object from the datasource to present to the application")]
        [global::System.ComponentModel.DisplayNameAttribute("Select From")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SelectFromPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string SelectFrom
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SelectFromPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SelectFromPropertyName] = value;
            }
        }
        #endregion
        
        #region ControllerType Property
        /// <summary>
        /// The XML name of the <see cref="ControllerType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ControllerTypePropertyName = "controllerType";
        
        /// <summary>
        /// Gets or sets the ControllerType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ControllerType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ControllerTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ControllerType
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ControllerTypePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.ControllerTypePropertyName] = value;
            }
        }
        #endregion
        
        #region SchemaIniSettings Property
        /// <summary>
        /// The XML name of the <see cref="SchemaIniSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SchemaIniSettingsPropertyName = "schemaIniSettings";
        
        /// <summary>
        /// Gets or sets the SchemaIniSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The SchemaIniSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SchemaIniSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.SchemaIniElementCollection SchemaIniSettings
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElementCollection)(base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SchemaIniSettingsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.NamedConnectionElement.SchemaIniSettingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of NamedConnectionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.NamedConnectionElementCollection.NamedConnectionElementPropertyName)]
    public partial class NamedConnectionElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamedConnectionElementPropertyName = "namedConnectionElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.NamedConnectionElementCollection.NamedConnectionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.NamedConnectionElementCollection.NamedConnectionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.NamedConnectionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.NamedConnectionElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.NamedConnectionElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="namedConnectionElement">The <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement namedConnectionElement)
        {
            base.BaseAdd(namedConnectionElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="namedConnectionElement">The <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.NamedConnectionElement namedConnectionElement)
        {
            base.BaseRemove(this.GetElementKey(namedConnectionElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.NamedConnectionElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.NamedConnectionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.NamedConnectionElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.NamedConnectionElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqSettingElement Configuration Element.
    /// </summary>
    public partial class MonahrqSettingElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.ValuePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of MonahrqSettingElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.MonahrqSettingElementCollection.MonahrqSettingElementPropertyName)]
    public partial class MonahrqSettingElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqSettingElementPropertyName = "monahrqSettingElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.MonahrqSettingElementCollection.MonahrqSettingElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.MonahrqSettingElementCollection.MonahrqSettingElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqSettingElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement monahrqSettingElement)
        {
            base.BaseAdd(monahrqSettingElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqSettingElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement monahrqSettingElement)
        {
            base.BaseRemove(this.GetElementKey(monahrqSettingElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqNamedSettingsElement Configuration Element.
    /// </summary>
    public partial class MonahrqNamedSettingsElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Settings Property
        /// <summary>
        /// The XML name of the <see cref="Settings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SettingsPropertyName = "settings";
        
        /// <summary>
        /// Gets or sets the Settings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Settings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.SettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.MonahrqSettingElementCollection Settings
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqSettingElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.SettingsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement.SettingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqContentPartElement Configuration Element.
    /// </summary>
    public partial class MonahrqContentPartElement : global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of MonahrqContentPartElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElementCollection.MonahrqContentPartElementPropertyName)]
    public partial class MonahrqContentPartElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqContentPartElementPropertyName = "monahrqContentPartElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElementCollection.MonahrqContentPartElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElementCollection.MonahrqContentPartElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqContentPartElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement monahrqContentPartElement)
        {
            base.BaseAdd(monahrqContentPartElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqContentPartElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement monahrqContentPartElement)
        {
            base.BaseRemove(this.GetElementKey(monahrqContentPartElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqContentTypeElement Configuration Element.
    /// </summary>
    public partial class MonahrqContentTypeElement : global::Monahrq.Infrastructure.Configuration.MonahrqNamedSettingsElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ContentParts Property
        /// <summary>
        /// The XML name of the <see cref="ContentParts"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ContentPartsPropertyName = "contentParts";
        
        /// <summary>
        /// Gets or sets the ContentParts.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ContentParts.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement.ContentPartsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElementCollection ContentParts
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentPartElementCollection)(base[global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement.ContentPartsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement.ContentPartsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of MonahrqContentTypeElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElementCollection.MonahrqContentTypeElementPropertyName)]
    public partial class MonahrqContentTypeElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqContentTypeElementPropertyName = "monahrqContentTypeElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElementCollection.MonahrqContentTypeElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElementCollection.MonahrqContentTypeElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqContentTypeElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement monahrqContentTypeElement)
        {
            base.BaseAdd(monahrqContentTypeElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="monahrqContentTypeElement">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement monahrqContentTypeElement)
        {
            base.BaseRemove(this.GetElementKey(monahrqContentTypeElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqContentTypeElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The SchemaIniElement Configuration Element.
    /// </summary>
    public partial class SchemaIniElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.SchemaIniElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.SchemaIniElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.SchemaIniElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.SchemaIniElement.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.SchemaIniElement.ValuePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.SchemaIniElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of SchemaIniElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.SchemaIniElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.SchemaIniElementCollection.SchemaIniElementPropertyName)]
    public partial class SchemaIniElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SchemaIniElementPropertyName = "schemaIniElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.SchemaIniElementCollection.SchemaIniElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.SchemaIniElementCollection.SchemaIniElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.SchemaIniElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.SchemaIniElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.SchemaIniElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="schemaIniElement">The <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.SchemaIniElement schemaIniElement)
        {
            base.BaseAdd(schemaIniElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="schemaIniElement">The <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.SchemaIniElement schemaIniElement)
        {
            base.BaseRemove(this.GetElementKey(schemaIniElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.SchemaIniElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.SchemaIniElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.SchemaIniElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.SchemaIniElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The ConnectionStringSettingsElement Configuration Element.
    /// </summary>
    public partial class ConnectionStringSettingsElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ProviderName Property
        /// <summary>
        /// The XML name of the <see cref="ProviderName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ProviderNamePropertyName = "providerName";
        
        /// <summary>
        /// Gets or sets the ProviderName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ProviderName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ProviderNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue="System.Data.SqlClient")]
        public virtual string ProviderName
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ProviderNamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ProviderNamePropertyName] = value;
            }
        }
        #endregion
        
        #region ConnectionString Property
        /// <summary>
        /// The XML name of the <see cref="ConnectionString"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ConnectionStringPropertyName = "connectionString";
        
        /// <summary>
        /// Gets or sets the ConnectionString.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ConnectionString.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ConnectionStringPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string ConnectionString
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ConnectionStringPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsElement.ConnectionStringPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqThemeElement Configuration Element.
    /// </summary>
    public partial class MonahrqThemeElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region IsDefault Property
        /// <summary>
        /// The XML name of the <see cref="IsDefault"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IsDefaultPropertyName = "isDefault";
        
        /// <summary>
        /// Gets or sets the IsDefault.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The IsDefault.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.IsDefaultPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool IsDefault
        {
            get
            {
                return ((bool)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.IsDefaultPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.IsDefaultPropertyName] = value;
            }
        }
        #endregion
        
        #region BrandColor Property
        /// <summary>
        /// The XML name of the <see cref="BrandColor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BrandColorPropertyName = "brandColor";
        
        /// <summary>
        /// Gets or sets the BrandColor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The BrandColor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BrandColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BrandColor
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BrandColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BrandColorPropertyName] = value;
            }
        }
        #endregion
        
        #region AccentColor Property
        /// <summary>
        /// The XML name of the <see cref="AccentColor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string AccentColorPropertyName = "accentColor";
        
        /// <summary>
        /// Gets or sets the AccentColor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The AccentColor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.AccentColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string AccentColor
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.AccentColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.AccentColorPropertyName] = value;
            }
        }
        #endregion
        
        #region BackgroundColor Property
        /// <summary>
        /// The XML name of the <see cref="BackgroundColor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BackgroundColorPropertyName = "backgroundColor";
        
        /// <summary>
        /// Gets or sets the BackgroundColor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The BackgroundColor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BackgroundColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BackgroundColor
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BackgroundColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BackgroundColorPropertyName] = value;
            }
        }
        #endregion
        
        #region Accent2Color Property
        /// <summary>
        /// The XML name of the <see cref="Accent2Color"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string Accent2ColorPropertyName = "accent2Color";
        
        /// <summary>
        /// Gets or sets the Accent2Color.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Accent2Color.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Accent2ColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Accent2Color
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Accent2ColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Accent2ColorPropertyName] = value;
            }
        }
        #endregion
        
        #region BodyTextColor Property
        /// <summary>
        /// The XML name of the <see cref="BodyTextColor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string BodyTextColorPropertyName = "bodyTextColor";
        
        /// <summary>
        /// Gets or sets the BodyTextColor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The BodyTextColor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BodyTextColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BodyTextColor
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BodyTextColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.BodyTextColorPropertyName] = value;
            }
        }
        #endregion
        
        #region LinkTextColor Property
        /// <summary>
        /// The XML name of the <see cref="LinkTextColor"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string LinkTextColorPropertyName = "linkTextColor";
        
        /// <summary>
        /// Gets or sets the LinkTextColor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The LinkTextColor.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.LinkTextColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string LinkTextColor
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.LinkTextColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.LinkTextColorPropertyName] = value;
            }
        }
        #endregion
        
        #region Brand2Color Property
        /// <summary>
        /// The XML name of the <see cref="Brand2Color"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string Brand2ColorPropertyName = "brand2Color";
        
        /// <summary>
        /// Gets or sets the Brand2Color.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Brand2Color.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Brand2ColorPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Brand2Color
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Brand2ColorPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement.Brand2ColorPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of MonahrqThemeElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.MonahrqThemeElementPropertyName)]
    public partial class MonahrqThemeElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqThemeElementPropertyName = "theme";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.MonahrqThemeElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.MonahrqThemeElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="theme">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement theme)
        {
            base.BaseAdd(theme);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="theme">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement theme)
        {
            base.BaseRemove(this.GetElementKey(theme));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqThemeElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region JsonFileExtension Property
        /// <summary>
        /// The XML name of the <see cref="JsonFileExtension"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string JsonFileExtensionPropertyName = "json-file-extension";
        
        /// <summary>
        /// Gets or sets the JsonFileExtension.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The JsonFileExtension.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.JsonFileExtensionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="json")]
        public virtual string JsonFileExtension
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.JsonFileExtensionPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqThemeElementCollection.JsonFileExtensionPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The HospitalRegionElement Configuration Element.
    /// </summary>
    public partial class HospitalRegionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DefaultRegionTypeName Property
        /// <summary>
        /// The XML name of the <see cref="DefaultRegionTypeName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DefaultRegionTypeNamePropertyName = "defaultRegionTypeName";
        
        /// <summary>
        /// Gets or sets the DefaultRegionTypeName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultRegionTypeName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultRegionTypeNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string DefaultRegionTypeName
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultRegionTypeNamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultRegionTypeNamePropertyName] = value;
            }
        }
        #endregion
        
        #region DefaultStatesBAD Property
        /// <summary>
        /// The XML name of the <see cref="DefaultStatesBAD"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DefaultStatesBADPropertyName = "defaultStatesBAD";
        
        /// <summary>
        /// Gets or sets the DefaultStatesBAD.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultStatesBAD.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesBADPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::System.Collections.Specialized.StringCollection DefaultStatesBAD
        {
            get
            {
                return ((global::System.Collections.Specialized.StringCollection)(base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesBADPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesBADPropertyName] = value;
            }
        }
        #endregion
        
        #region DefaultStatesProxy Property
        /// <summary>
        /// The XML name of the <see cref="DefaultStatesProxy"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string DefaultStatesProxyPropertyName = "defaultStatesProxy";
        
        /// <summary>
        /// Gets or sets the DefaultStatesProxy.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultStatesProxy.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesProxyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Monahrq.Infrastructure.Configuration.StatesCollectionElement DefaultStatesProxy
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.StatesCollectionElement)(base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesProxyPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.HospitalRegionElement.DefaultStatesProxyPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The ConnectionStringSettingsE Configuration Element.
    /// </summary>
    public partial class ConnectionStringSettingsE : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ConnectionStringSettings Property
        /// <summary>
        /// The XML name of the <see cref="ConnectionStringSettings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ConnectionStringSettingsPropertyName = "connectionStringSettings";
        
        /// <summary>
        /// Gets or sets the ConnectionStringSettings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ConnectionStringSettings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsE.ConnectionStringSettingsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::System.Configuration.ConnectionStringSettings ConnectionStringSettings
        {
            get
            {
                return ((global::System.Configuration.ConnectionStringSettings)(base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsE.ConnectionStringSettingsPropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.ConnectionStringSettingsE.ConnectionStringSettingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of StateElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.StateElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.StatesCollectionElement.StateElementPropertyName)]
    public partial class StatesCollectionElement : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string StateElementPropertyName = "stateElement";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.StatesCollectionElement.StateElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.StatesCollectionElement.StateElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.StateElement)(element)).StateName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.StateElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.StateElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.StateElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> with the specified key.
        /// </summary>
        /// <param name="stateName">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.StateElement this[object stateName]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.StateElement)(base.BaseGet(stateName)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="stateElement">The <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.StateElement stateElement)
        {
            base.BaseAdd(stateElement);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="stateElement">The <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.StateElement stateElement)
        {
            base.BaseRemove(this.GetElementKey(stateElement));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.StateElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.StateElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> with the specified key.
        /// </summary>
        /// <param name="stateName">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.StateElement GetItemByKey(string stateName)
        {
            return ((global::Monahrq.Infrastructure.Configuration.StateElement)(base.BaseGet(((object)(stateName)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The StateElement Configuration Element.
    /// </summary>
    public partial class StateElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region StateName Property
        /// <summary>
        /// The XML name of the <see cref="StateName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string StateNamePropertyName = "stateName";
        
        /// <summary>
        /// Gets or sets the StateName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The StateName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.StateElement.StateNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=true)]
        public virtual string StateName
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.StateElement.StateNamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.StateElement.StateNamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// A collection of MonahrqBannerElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Monahrq.Infrastructure.Configuration.MonahrqBannerElementCollection.MonahrqBannerElementPropertyName)]
    public partial class MonahrqBannerElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MonahrqBannerElementPropertyName = "banner";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override string ElementName
        {
            get
            {
                return global::Monahrq.Infrastructure.Configuration.MonahrqBannerElementCollection.MonahrqBannerElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Monahrq.Infrastructure.Configuration.MonahrqBannerElementCollection.MonahrqBannerElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement this[int index]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement this[object name]
        {
            get
            {
                return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="banner">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Add(global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement banner)
        {
            base.BaseAdd(banner);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="banner">The <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public void Remove(global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement banner)
        {
            base.BaseRemove(this.GetElementKey(banner));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement GetItemAt(int index)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement GetItemByKey(string name)
        {
            return ((global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// The MonahrqBannerElement Configuration Element.
    /// </summary>
    public partial class MonahrqBannerElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.NamePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.ValuePropertyName]));
            }
            set
            {
                base[global::Monahrq.Infrastructure.Configuration.MonahrqBannerElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Monahrq.Infrastructure.Configuration
{
    
    
    /// <summary>
    /// TimespanFromStringConverter Custom Converter
    /// </summary>
    public partial class TimespanFromStringConverter : global::System.Configuration.ConfigurationConverterBase
    {
        
        /// <summary>
        /// Converts from <see cref="string" /> to <see cref="global::System.TimeSpan" />.
        /// </summary>
        /// <param name="context">The <see cref="global::System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
        /// <param name="culture">The <see cref="global::System.Globalization.CultureInfo" /> to use as the current culture.</param>
        /// <param name="value">The <see cref="string" /> to convert from.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, object value)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // This is a custom type validator that must be implemented
            // for it to build. Place the following in a separate file
            // and implement the method.
            // 
            // public partial class TimespanFromStringConverter
            // {
            //     
            //     private global::System.TimeSpan ConvertFromStringToTimeSpan(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, string value)
            //     {
            //         throw new global::System.NotImplementedException();
            //     }
            // }
            // 
            return this.ConvertFromStringToTimeSpan(context, culture, ((string)(value)));
        }
        
        /// <summary>
        /// Converts from <see cref="global::System.TimeSpan" /> to <see cref="string" />.
        /// </summary>
        /// <param name="context">The <see cref="global::System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
        /// <param name="culture">The <see cref="global::System.Globalization.CultureInfo" /> to use as the current culture.</param>
        /// <param name="value">The <see cref="string" /> to convert from.</param>
        /// <param name="type">The <see cref="global::System.Type" /> to convert the value parameter to.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, object value, global::System.Type type)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // This is a custom type validator that must be implemented
            // for it to build. Place the following in a separate file
            // and implement the method.
            // 
            // public partial class TimespanFromStringConverter
            // {
            //     
            //     private string ConvertToTimeSpanFromString(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.TimeSpan value, global::System.Type type)
            //     {
            //         return value.ToString();
            //     }
            // }
            // 
            return this.ConvertToTimeSpanFromString(context, culture, ((global::System.TimeSpan)(value)), type);
        }
    }
}
