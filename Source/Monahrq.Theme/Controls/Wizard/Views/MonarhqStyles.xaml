<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<ItemsPanelTemplate x:Key="StepLayoutTemplate">
        <UniformGrid IsItemsHost="True" Columns="{Binding Items.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"/>
	</ItemsPanelTemplate>
	<!-- Resource dictionary entries should be defined here. -->
<!-- WIZARD STEP TEMPLATE -->
	<DataTemplate x:Key="WizardGroupTemplate">
		<Grid x:Name="bdOuter"
			Height="Auto"
			Margin="0"
			Opacity="0.5"
			SnapsToDevicePixels="True" Width="Auto">
			
			
			<TextBlock x:Name="txt"
				Text="{Binding DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" FontSize="16" FontWeight="Bold" />
		</Grid>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding ViewModel.IsCurrentStep}"
				Value="True">
				<Setter TargetName="txt"
					Property="FontWeight"
					Value="Bold" />
                 
				<Setter TargetName="bdOuter"
					Property="Opacity"
					Value="1" />
				
			</DataTrigger>
                
                <!-- show/hide steps (must be relevant and visited to be visible) -->
			<DataTrigger Binding="{Binding Relevant}"
				Value="False">
				<Setter TargetName="bdOuter"
					Property="Visibility"
					Value="Visible" />
			</DataTrigger>
			<DataTrigger Binding="{Binding Visited}"
				Value="False">
				<Setter TargetName="bdOuter"
					Property="Visibility"
					Value="Collapsed" />
				
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>


    <!-- HEADERED CONTENT CONTROL STYLE -->
    <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Border Height="Auto" CornerRadius="5" Background="White">
                        <Grid Height="Auto" Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="461"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter ContentSource="Header"
                    				TextBlock.FontSize="22"
                    				TextBlock.FontWeight="DemiBold"
                    				TextBlock.Foreground="Brown"
                    				HorizontalAlignment="Center"
                    				VerticalAlignment="Center" />
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Column="0" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="White" CornerRadius="5" BorderBrush="#FF7C7B7B" Margin="5" Padding="2" Grid.RowSpan="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0.578*"/>
                                            <RowDefinition Height="9.879"/>
                                            <RowDefinition Height="0.422*"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter ContentSource="Content" Grid.RowSpan="1" />
                                        <Border BorderBrush="Black" BorderThickness="0" Grid.Row="1" Margin="10,0" CornerRadius="0" Background="#FFC6C6C6">

                                            <ProgressBar Minimum="0" Maximum="{Binding MaxGroupProgress}" SmallChange="0.5" LargeChange="1" Value="{Binding CurrentGroupIndex}" />

                                        </Border>
                                        <ItemsControl ItemTemplate="{DynamicResource wizardStepTemplate}" HorizontalAlignment="Stretch" Margin="0,4,0,-4" Grid.Row="2" Grid.RowSpan="1" Width="Auto" ItemsSource="{Binding CurrentGroupSteps}" ItemsPanel="{DynamicResource StepLayoutTemplate}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- WIZARD STEP TEMPLATE -->
    <DataTemplate x:Key="wizardStepTemplate">
        <Grid x:Name="bdOuter"
                    Height="Auto"
        		Margin="0"
        		Opacity="1"
        		SnapsToDevicePixels="True" Width="Auto">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="3.45"/>
            </Grid.RowDefinitions>
            <Border x:Name="bdInner"
        			Background="{x:Null}"
        			BorderBrush="{x:Null}"
        			BorderThickness="0"
        			CornerRadius="0"
        			Padding="0" Margin="0" d:LayoutOverrides="Width, Height" Grid.RowSpan="1" Grid.Row="1" Opacity="1">
                <!-- We need a grid here because it defaults to elements stacked directly on top of one another -->
                <Grid Width="17.698" HorizontalAlignment="Center" Margin="0,-0.284,0,-7.772">
                    <Path x:Name="arrow" Data="M5.4996665,1.7275618 L8.0934167,5.166286 10.405916,1.6968055 z" Opacity="1" Fill="White" Margin="0" Stretch="Fill" Stroke="White" HorizontalAlignment="Center" VerticalAlignment="Top" Height="10.794" Width="16.399"/>
                </Grid>
            </Border>
            <TextBlock x:Name="txt"
        			Text="{Binding ViewModel.DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ViewModel.IsCurrentStep}"
                             Value="True">
                <Setter TargetName="txt"
                            Property="FontWeight"
                            Value="Bold" />


                <Setter TargetName="arrow"
                            Property="Opacity"
                            Value="1"/>
            </DataTrigger>


            <DataTrigger Binding="{Binding Path=ViewModel.IsCurrentStep}"
                             Value="False">


                <Setter TargetName="bdInner"
                            Property="Visibility"
                            Value="Collapsed"/>
            </DataTrigger>


            <!-- show/hide steps (must be relevant and visited to be visible) -->
            <!-- <DataTrigger Binding="{Binding Path=Relevant}"
                             Value="False">
                    <Setter TargetName="bdOuter"
                            Property="Visibility"
                            Value="Visible" />
                </DataTrigger>-->
            <DataTrigger Binding="{Binding Path=Visited}"
                             Value="False">
                <!-- <Setter TargetName="bdOuter"
                            Property="Visibility"
                            Value="Collapsed" />-->
                <Setter TargetName="bdInner"
                            Property="Visibility"
                            Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>