<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                    xmlns:custom1="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:microsoftWindowsThemes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:Custom="clr-namespace:Monahrq.Theme.Converters"
                    xmlns:mtxc="clr-namespace:Monahrq.Theme.Converters"
                    xmlns:mtxm="clr-namespace:Monahrq.Theme.MarkupExtensions"
                    xmlns:controls="clr-namespace:Monahrq.Theme.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Monahrq.Theme;component/AppResources.xaml" />
        <ResourceDictionary Source="/Monahrq.Theme;component/Resources/Icons.xaml" />
        <ResourceDictionary Source="/Monahrq.Theme;component/Styles/ButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- COLORS -->
    <SolidColorBrush x:Key="MVeryLightGreen"
                     Color="#FFDBFA9D" />
    <SolidColorBrush x:Key="MLightGreen"
                     Color="#FFB5E652" />
    <SolidColorBrush x:Key="MGreen"
                     Color="#FF99CD32" />
    <SolidColorBrush x:Key="MDGreen"
                     Color="YellowGreen" />
    <SolidColorBrush x:Key="MDarkGreen"
                     Color="#FF78A71A" />
    <SolidColorBrush x:Key="MVeryDarkGreen"
                     Color="#FF557D07" />
    <SolidColorBrush x:Key="MVeryLightBlue"
                     Color="#FFBEDAE7" />
    <SolidColorBrush x:Key="MLightBlue"
                     Color="#FF6BC3EA" />
    <SolidColorBrush x:Key="MBlue"
                     Color="#FF41B0E0" />
    <SolidColorBrush x:Key="MDBlue"
                     Color="#FF3886A8" />
    <SolidColorBrush x:Key="MDarkBlue"
                     Color="#FF1A9CD4" />
    <SolidColorBrush x:Key="MVeryDarkBlue"
                     Color="#FF057EB2" />
    <SolidColorBrush x:Key="MYellow"
                     Color="#FFF9FF82" />
    <SolidColorBrush x:Key="MYellow2"
                     Color="#FFF8CA00" />
    <SolidColorBrush x:Key="MDarkYellow"
                     Color="#FFdfb500" />
    <SolidColorBrush x:Key="MVeryLightPink"
                     Color="#FFFFE8E8" />
    <SolidColorBrush x:Key="MLightPink"
                     Color="#FFFFCBCB" />
    <SolidColorBrush x:Key="MPink"
                     Color="#FFFFA9A9" />
    <SolidColorBrush x:Key="MDarkPink"
                     Color="#FFD76D6D" />
    <SolidColorBrush x:Key="MVeryDarkPink"
                     Color="#FFAA3838" />
    <SolidColorBrush x:Key="MGrey1"
                     Color="#FFF7F7F7" />
    <SolidColorBrush x:Key="MGrey2"
                     Color="#FFE0E0E0" />
    <SolidColorBrush x:Key="MGrey3"
                     Color="#FFBEBEBE" />
    <SolidColorBrush x:Key="MGrey4"
                     Color="Gray" />
    <SolidColorBrush x:Key="MGrey5"
                     Color="#FF626262" />
    <SolidColorBrush x:Key="White"
                     Color="#FFF" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                     Color="#DDD" />

  
    <SolidColorBrush x:Key="DisabledForegroundBrush" 
                     Color="#888" />

    <Style x:Key="CommonStyle"
           TargetType="FrameworkElement">
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--     Monahrq Buttons     -->
    <Style x:Key="MonahqButtonBaseStyle"
           TargetType="controls:MonahrqButton">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="BorderBrush"
                Value="{StaticResource MGrey5}" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>

        <Setter Property="MouseoverBorder"
                Value="White" />
        <Setter Property="MouseoverForeground"
                Value="White"></Setter>

        <Setter Property="PressedBorder"
                Value="White" />
        <Setter Property="PressedForeground"
                Value="White"></Setter>

        <Setter Property="DisabledBorder"
                Value="{StaticResource MGrey5}" />
        <Setter Property="DisabledForeground"
                Value="{StaticResource MGrey5}" />

        <Setter Property="FocusedBorder"
                Value="White"></Setter>
    </Style>

    <Style x:Key="MonahrqGreenStyle"
           BasedOn="{StaticResource MonahqButtonBaseStyle}"
           TargetType="controls:MonahrqButton">
        <Setter Property="Background"
                Value="{StaticResource MGreen}" />
        <Setter Property="MouseoverBackground"
                Value="{StaticResource MDarkGreen}" />
        <Setter Property="PressedBackground"
                Value="{StaticResource MVeryDarkGreen}" />
        <Setter Property="DisabledBackground"
                Value="{StaticResource MVeryLightGreen}" />
        <Setter Property="FocusedBackground"
                Value="{StaticResource MLightGreen}" />

    </Style>

    <Style x:Key="MonahrqPinkStyle"
           BasedOn="{StaticResource MonahqButtonBaseStyle}"
           TargetType="controls:MonahrqButton">
        <Setter Property="Background"
                Value="{StaticResource MPink}" />
        <Setter Property="MouseoverBackground"
                Value="{StaticResource MDarkPink}" />
        <Setter Property="PressedBackground"
                Value="{StaticResource MVeryDarkPink}" />
        <Setter Property="DisabledBackground"
                Value="{StaticResource MVeryLightPink}" />
        <Setter Property="FocusedBackground"
                Value="{StaticResource MLightPink}" />
    </Style>

    <Style x:Key="MonahrqBlueStyle"
           BasedOn="{StaticResource MonahqButtonBaseStyle}"
           TargetType="controls:MonahrqButton">
        <Setter Property="Background"
                Value="{StaticResource MBlue}" />
        <Setter Property="MouseoverBackground"
                Value="{StaticResource MDarkBlue}" />
        <Setter Property="PressedBackground"
                Value="{StaticResource MVeryDarkBlue}" />
        <Setter Property="DisabledBackground"
                Value="{StaticResource MVeryLightBlue}" />
        <Setter Property="FocusedBackground"
                Value="{StaticResource MLightBlue}" />
    </Style>

    <Style x:Key="MonahrqGreyStyle"
           BasedOn="{StaticResource MonahqButtonBaseStyle}"
           TargetType="controls:MonahrqButton">
        <Setter Property="Background"
                Value="{StaticResource MGrey3}" />
        <Setter Property="MouseoverBackground"
                Value="{StaticResource MGrey4}" />
        <Setter Property="PressedBackground"
                Value="{StaticResource MGrey5}" />
        <Setter Property="DisabledBackground"
                Value="{StaticResource MGrey1}" />
        <Setter Property="FocusedBackground"
                Value="{StaticResource MGrey2}" />
    </Style>

    <!-- Navigation Buttons -->

    <Style x:Key="MonahrqButtonReports"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource MouseOverDarkGrey}"
                                Opacity="0"
                                CornerRadius="3.5" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource FocusGrey}"
                                CornerRadius="3.5"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Fill="{DynamicResource FocusGrey}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,0,5,-13.15"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Bottom" />
                        <Rectangle Margin="17,13,17,13"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="Black"
                                   StrokeThickness="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_page_text}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqButtonDataSets"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource MouseOverDarkGrey}"
                                Opacity="0"
                                CornerRadius="3.5" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource FocusGrey}"
                                CornerRadius="3.5"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Fill="{DynamicResource FocusGrey}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,0,5,-13.15"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Bottom" />
                        <Rectangle Margin="17,15,17,15"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Stroke="Black"
                                   StrokeThickness="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_database}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqButtonWebsites"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource MouseOverDarkGrey}"
                                Opacity="0"
                                CornerRadius="3.5" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource FocusGrey}"
                                CornerRadius="3.5"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Fill="{DynamicResource FocusGrey}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,0,5,-13.15"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Bottom" />
                        <Rectangle Margin="17,15,17,15"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="Black"
                                   StrokeThickness="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_globe}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqButtonMeasures"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource MouseOverDarkGrey}"
                                Opacity="0"
                                CornerRadius="3.5" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource FocusGrey}"
                                CornerRadius="3.5"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Fill="{DynamicResource FocusGrey}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,0,5,-13.15"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Bottom" />
                        <Rectangle Margin="17,15,17,15"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Stroke="Black"
                                   StrokeThickness="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_layer_perspective_up}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqButtonSettings"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource MouseOverDarkGrey}"
                                Opacity="0"
                                CornerRadius="3.5" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource FocusGrey}"
                                CornerRadius="3.5"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   Fill="{DynamicResource FocusGrey}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,0,5,-13.15"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Bottom" />
                        <Rectangle Margin="17,15,17,15"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="Black"
                                   StrokeThickness="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_cogs}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqHelpButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="rectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0" />
                        <Border x:Name="MouseOverBorder"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Hidden" />
                        <Rectangle Margin="0,5.75,0,5.591"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{x:Null}"
                                   HorizontalAlignment="Center"
                                   Width="20"
                                   Height="28">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_book_help}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="rectangle"
                                   Margin="0,5.75,0,5.591"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{x:Null}"
                                   HorizontalAlignment="Center"
                                   Width="20"
                                   Height="28"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_book_help_white}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqHelpSearchButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="3.5" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0"
                                Background="#FF393939" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3.5"
                                Opacity="0"
                                Background="#FF747474" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="3.5"
                                   RadiusX="3.5" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Hidden" />
                        <Rectangle  Margin="3"
                                    RadiusY="0"
                                    RadiusX="0"
                                    Width="15"
                                    Height="15">
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_magnify}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqDataImportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="36.125" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{DynamicResource MGrey4}"
                                Margin="0,0,0,0"
                                Padding="3">

                            <Rectangle Margin="0"
                                       RadiusY="0"
                                       RadiusX="0"
                                       Stroke="White"
                                       StrokeThickness="0"
                                       Width="20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Height="20">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cabinet_in}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqArrowButtonRight"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Left"
                                          Margin="20,0,0,0" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="#FF626262">
                            <Rectangle  Margin="6">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_navigate_next}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqArrowButtonLeft"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="3" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="3" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="3" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="3" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="3" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="3" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Column="1" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="0"
                                Background="{DynamicResource MGrey5}">
                            <Rectangle  Margin="6">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_navigate_previous}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqArrowButtonLeftReversed"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="3" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="3" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="3" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="3" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="3" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="3" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Column="1" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="0"
                                Background="{DynamicResource MGrey5}">
                            <Rectangle  Margin="6">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_navigate_previous_reverted}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlainButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="0" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="1"
                                Background="{DynamicResource GrayBrush8}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="0"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlainImportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MBlue}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="Padding"
                Value="10,5" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Grid.ColumnSpan="2"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="0" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="0"
                                Background="{DynamicResource MDarkBlue}"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource MBlue}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="0"
                                   Grid.ColumnSpan="2"
                                   Stroke="Transparent" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   Stroke="Transparent"
                                   Grid.ColumnSpan="2"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="1"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border x:Name="content"
                                Grid.Column="1"
                                CornerRadius="0"
                                Padding="6"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="42"
                                                      Height="44"
                                                      Canvas.Left="17"
                                                      Canvas.Top="13"
                                                      Stretch="Fill"
                                                      Fill="{DynamicResource White}"
                                                      Data="F1 M 35,13L 35,30.5L 27,21L 27,30.75L 38,43.25L 49,30.75L 49,21L 41,30.5L 41,13L 35,13 Z M 17,38L 30,38L 33.75,42L 21,42L 21,53L 55,53L 55,42L 42.25,42L 46,38L 59,38L 59,57L 17,57L 17,38 Z M 33,46L 43,46L 43,49L 33,49L 33,46 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource White}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlainExportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MBlue}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Grid.ColumnSpan="2"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="0" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="0"
                                Background="{DynamicResource MDarkBlue}"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource MBlue}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="0"
                                   Grid.ColumnSpan="2"
                                   Stroke="Transparent" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   Stroke="Transparent"
                                   Grid.ColumnSpan="2"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="1"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border x:Name="content"
                                Grid.Column="1"
                                CornerRadius="0"
                                Padding="6"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="42"
                                                      Height="44.25"
                                                      Canvas.Left="17"
                                                      Canvas.Top="12.75"
                                                      Stretch="Fill"
                                                      Fill="{DynamicResource White}"
                                                      Data="F1 M 35,43L 35,25.5L 27,35L 27,25.25L 38,12.75L 49,25.25L 49,35L 41,25.5L 41,43L 35,43 Z M 17,38L 33,38L 33,42L 21,42L 21,53L 55,53L 55,42L 43,42L 43,38L 59,38L 59,57L 17,57L 17,38 Z M 33,46L 43,46L 43,49L 33,49L 33,46 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource White}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlainDeleteButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="MinWidth"
                Value="60" />
        <Setter Property="MaxWidth"
                Value="150" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MPink}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource MDarkPink}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="Padding"
                Value="18,5,18,5" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                           <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}"/>
                        </Grid.ColumnDefinitions>-->

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Grid.ColumnSpan="2"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="0" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="0"
                                Background="{DynamicResource MGrey1}"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource MBlue}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="0"
                                   Grid.ColumnSpan="2"
                                   Stroke="Transparent" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   Stroke="Transparent"
                                   Grid.ColumnSpan="2"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="0"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Stretch"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--<Border x:Name="content" Grid.Column="1" CornerRadius="0"  Padding="6" BorderBrush="Transparent" Background="Transparent">
                            <Rectangle x:Name="rct" StrokeThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="27.7083" Height="35.625" Canvas.Left="24.1458" Canvas.Top="19.7917" Stretch="Fill" Fill="White" Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>-->
                    </Grid>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource White}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ImportButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="brd"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                BorderThickness="1"
                                Padding="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource MGrey4}" />
                        <Border x:Name="mouseover"
                                Grid.ColumnSpan="2"
                                Margin="1"
                                CornerRadius="0"
                                Padding="6"
                                Background="{DynamicResource MGrey2}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                Grid.ColumnSpan="2"
                                Margin="1"
                                CornerRadius="0"
                                Padding="6"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                Grid.ColumnSpan="2"
                                Margin="1"
                                CornerRadius="0"
                                Padding="6"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="content"
                                Grid.Column="1"
                                CornerRadius="0"
                                Padding="6"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="42"
                                                      Height="44"
                                                      Canvas.Left="17"
                                                      Canvas.Top="13"
                                                      Stretch="Fill"
                                                      Fill="{DynamicResource MGrey5}"
                                                      Data="F1 M 35,13L 35,30.5L 27,21L 27,30.75L 38,43.25L 49,30.75L 49,21L 41,30.5L 41,13L 35,13 Z M 17,38L 30,38L 33.75,42L 21,42L 21,53L 55,53L 55,42L 42.25,42L 46,38L 59,38L 59,57L 17,57L 17,38 Z M 33,46L 43,46L 43,49L 33,49L 33,46 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                Margin="1"
                                CornerRadius="2.5"
                                Padding="6"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="0"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <system:Double x:Key="btnSize">22</system:Double>

    <Style TargetType="Button"
           x:Key="EditButton">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCornerRadius"
                          TopLeft="2.5"
                          TopRight="2.5"
                          BottomLeft="2.5"
                          BottomRight="2.5" />
            <system:Double x:Key="ButtonWidth">22</system:Double>
            <system:Double x:Key="ButtonHeight">22</system:Double>
            <!-- 
			<StaticResourceExtension x:Key="ButtonWidth" ResourceKey="btnSize" />
			<StaticResourceExtension x:Key="ButtonHeight" ResourceKey="btnSize" /> -->
        </Style.Resources>
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{DynamicResource ButtonHeight}"
                          Width="{DynamicResource ButtonWidth}">
                        <Border x:Name="brd"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="5"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="mouseover"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="pressed"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="focused"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="{DynamicResource MBlue}"
                                Opacity="0" />
                        <Border x:Name="enabled"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="6"
                                Background="White"
                                BorderBrush="White"
                                Opacity="0" />
                        <Border x:Name="content"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="Transparent">
                            <Border.Width>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Height>
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="35.4775"
                                                      Height="35.4776"
                                                      Canvas.Left="20.9792"
                                                      Canvas.Top="19.5431"
                                                      Stretch="Fill"
                                                      Fill="White"
                                                      Data="F1 M 42.7499,25.3335L 50.6666,33.2501L 31.6667,52.25L 23.75,44.3334L 42.7499,25.3335 Z M 52.1704,31.6664L 44.3333,23.8293L 47.6921,20.4706C 48.9288,19.2339 50.9338,19.2339 52.1705,20.4706L 55.5292,23.8293C 56.7659,25.066 56.7659,27.071 55.5292,28.3077L 52.1704,31.6664 Z M 21.7709,55.0207L 20.9792,54.2291L 23.0573,47.5988L 28.4011,52.9426L 21.7709,55.0207 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ReImportButton">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCornerRadius"
                          TopLeft="2.5"
                          TopRight="2.5"
                          BottomLeft="2.5"
                          BottomRight="2.5" />
            <system:Double x:Key="ButtonWidth">22</system:Double>
            <system:Double x:Key="ButtonHeight">22</system:Double>
        </Style.Resources>
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{DynamicResource ButtonHeight}"
                          Width="{DynamicResource ButtonWidth}">
                        <Border x:Name="brd"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="5"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="mouseover"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDarkBlue}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="pressed"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDarkBlue}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="focused"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="{DynamicResource MBlue}"
                                Opacity="0" />
                        <Border x:Name="enabled"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="6"
                                Background="White"
                                BorderBrush="White"
                                Opacity="0" />
                        <Border x:Name="content"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="Transparent">
                            <Border.Width>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Height>
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <!--<Path Width="35.4775" Height="35.4776" Canvas.Left="20.9792" Canvas.Top="19.5431" Stretch="Fill" Fill="White" Data="F1 M 42.7499,25.3335L 50.6666,33.2501L 31.6667,52.25L 23.75,44.3334L 42.7499,25.3335 Z M 52.1704,31.6664L 44.3333,23.8293L 47.6921,20.4706C 48.9288,19.2339 50.9338,19.2339 52.1705,20.4706L 55.5292,23.8293C 56.7659,25.066 56.7659,27.071 55.5292,28.3077L 52.1704,31.6664 Z M 21.7709,55.0207L 20.9792,54.2291L 23.0573,47.5988L 28.4011,52.9426L 21.7709,55.0207 Z "/>-->
                                                <Path Width="16.4775"
                                                      Height="16.4776"
                                                      Canvas.Left="5.9792"
                                                      Canvas.Top="5.5431"
                                                      Fill="White"
                                                      Stretch="Uniform"
                                                      UseLayoutRounding="False"
                                                      Data="M33.6412,13.3342 C34.1892,13.3157 34.7319,13.5192 35.13,13.9098 L35.481,14.2528 C35.481,14.2528 35.582,14.3529 35.7709,14.5368 C35.9579,14.7128 36.23,15.0029 36.5609,15.4108 C37.1629,16.2189 37.9739,17.4969 38.4219,19.3309 C38.8089,21.1459 38.7448,23.518 37.6809,25.8689 C37.1779,27.055 36.3619,28.151 35.374,29.135 C34.385,30.122 33.173,30.941 31.8641,31.526 C30.5591,32.123 29.1672,32.514 27.7932,32.7191 C26.6272,32.835 25.4812,32.949 24.3702,33.058 C22.3023,33.225 20.3734,33.306 18.7194,33.3311 C18.2234,33.337 17.7625,33.3311 17.3184,33.322 L17.3184,37.4851 C17.3184,37.9501 17.0455,38.3731 16.6175,38.5631 C16.1905,38.7541 15.6875,38.6781 15.3385,38.3651 C11.6946,35.1181 8.44271,30.534 8.10575,29.838 C7.94676,29.513 7.94773,29.134 8.10672,28.81 C8.44674,28.111 11.7056,23.539 15.3385,20.3029 C15.5615,20.1049 15.8435,20.0009 16.1305,20.0009 C16.2945,20.0009 16.4615,20.0329 16.6175,20.1029 C17.0455,20.2929 17.3184,20.7169 17.3184,21.1819 L17.3184,25.4649 L18.7194,25.4649 L24.3702,25.4649 L25.9463,25.4649 L26.7262,25.4649 L27.2972,25.443 C28.0551,25.394 28.7772,25.2489 29.4311,25.015 C30.7441,24.555 31.7651,23.706 32.385,22.7049 C33.01,21.7019 33.2271,20.5769 33.1671,19.6069 C33.113,18.6339 32.807,17.8179 32.546,17.2659 C32.494,17.1589 32.447,17.0689 32.4051,16.9849 C32.3871,16.9309 32.2491,16.7249 32.1991,16.6379 C32.065,16.4209 31.995,16.3049 31.995,16.3049 C31.4251,15.3779 31.7301,14.1728 32.679,13.6148 C32.9817,13.4363 33.3124,13.3453 33.6412,13.3342 z M22.5228,8.9E-05 C22.8046,0.003539 23.0829,0.107522 23.301,0.302508 C26.9451,3.5505 30.1972,8.13145 30.5352,8.83045 C30.6932,9.15446 30.6922,9.53443 30.5332,9.85644 C30.1932,10.5554 26.9351,15.1274 23.301,18.3644 C23.079,18.5624 22.796,18.6674 22.509,18.6674 C22.345,18.6674 22.179,18.6324 22.024,18.5634 C21.5949,18.3754 21.32,17.9504 21.32,17.4844 L21.32,13.2024 L19.9199,13.2024 L14.2688,13.2024 L12.6927,13.2024 L11.9117,13.2034 L11.3407,13.2234 C10.5837,13.2744 9.86266,13.4184 9.20768,13.6524 C7.89466,14.1114 6.8726,14.9604 6.25461,15.9604 C5.62861,16.9634 5.41059,18.0914 5.47059,19.0594 C5.52461,20.0343 5.83058,20.8484 6.09158,21.4004 C6.14462,21.5073 6.19162,21.5993 6.23459,21.6823 C6.25058,21.7353 6.3906,21.9433 6.43961,22.0283 C6.57261,22.2464 6.64359,22.3623 6.64359,22.3623 C7.21465,23.2883 6.90764,24.4953 5.95962,25.0523 C5.15259,25.5273 4.14457,25.3833 3.50851,24.7583 L3.15651,24.4143 C3.15651,24.4143 3.05653,24.3153 2.8675,24.1303 C2.67951,23.9523 2.40753,23.6643 2.07848,23.2563 C1.4755,22.4473 0.664446,21.1703 0.216437,19.3354 C-0.169559,17.5204 -0.105531,15.1484 0.956445,12.7964 C1.45951,11.6114 2.27648,10.5154 3.26454,9.53144 C4.25456,8.54444 5.46461,7.72646 6.77561,7.13946 C8.07966,6.54446 9.47166,6.15448 10.8467,5.94647 C12.0118,5.83145 13.1588,5.71946 14.2688,5.61048 C16.3368,5.44346 18.2669,5.35947 19.9199,5.33549 C20.416,5.33146 20.877,5.33549 21.32,5.34348 L21.32,1.18251 C21.32,0.716507 21.5949,0.292529 22.024,0.104512 C22.1833,0.032141 22.3537,-0.001981 22.5228,8.9E-05 z" />
                                                <!--<Path Width="35.4775" Height="35.4776" Canvas.Left="-20.9792" Canvas.Top="19.5431" Stretch="Fill" Fill="White" 
                                                      Data="M33.6412,13.3342 C34.1892,13.3157 34.7319,13.5192 35.13,13.9098 L35.481,14.2528 C35.481,14.2528 35.582,14.3529 35.7709,14.5368 C35.9579,14.7128 36.23,15.0029 36.5609,15.4108 C37.1629,16.2189 37.9739,17.4969 38.4219,19.3309 C38.8089,21.1459 38.7448,23.518 37.6809,25.8689 C37.1779,27.055 36.3619,28.151 35.374,29.135 C34.385,30.122 33.173,30.941 31.8641,31.526 C30.5591,32.123 29.1672,32.514 27.7932,32.7191 C26.6272,32.835 25.4812,32.949 24.3702,33.058 C22.3023,33.225 20.3734,33.306 18.7194,33.3311 C18.2234,33.337 17.7625,33.3311 17.3184,33.322 L17.3184,37.4851 C17.3184,37.9501 17.0455,38.3731 16.6175,38.5631 C16.1905,38.7541 15.6875,38.6781 15.3385,38.3651 C11.6946,35.1181 8.44271,30.534 8.10575,29.838 C7.94676,29.513 7.94773,29.134 8.10672,28.81 C8.44674,28.111 11.7056,23.539 15.3385,20.3029 C15.5615,20.1049 15.8435,20.0009 16.1305,20.0009 C16.2945,20.0009 16.4615,20.0329 16.6175,20.1029 C17.0455,20.2929 17.3184,20.7169 17.3184,21.1819 L17.3184,25.4649 L18.7194,25.4649 L24.3702,25.4649 L25.9463,25.4649 L26.7262,25.4649 L27.2972,25.443 C28.0551,25.394 28.7772,25.2489 29.4311,25.015 C30.7441,24.555 31.7651,23.706 32.385,22.7049 C33.01,21.7019 33.2271,20.5769 33.1671,19.6069 C33.113,18.6339 32.807,17.8179 32.546,17.2659 C32.494,17.1589 32.447,17.0689 32.4051,16.9849 C32.3871,16.9309 32.2491,16.7249 32.1991,16.6379 C32.065,16.4209 31.995,16.3049 31.995,16.3049 C31.4251,15.3779 31.7301,14.1728 32.679,13.6148 C32.9817,13.4363 33.3124,13.3453 33.6412,13.3342 z M22.5228,8.9E-05 C22.8046,0.003539 23.0829,0.107522 23.301,0.302508 C26.9451,3.5505 30.1972,8.13145 30.5352,8.83045 C30.6932,9.15446 30.6922,9.53443 30.5332,9.85644 C30.1932,10.5554 26.9351,15.1274 23.301,18.3644 C23.079,18.5624 22.796,18.6674 22.509,18.6674 C22.345,18.6674 22.179,18.6324 22.024,18.5634 C21.5949,18.3754 21.32,17.9504 21.32,17.4844 L21.32,13.2024 L19.9199,13.2024 L14.2688,13.2024 L12.6927,13.2024 L11.9117,13.2034 L11.3407,13.2234 C10.5837,13.2744 9.86266,13.4184 9.20768,13.6524 C7.89466,14.1114 6.8726,14.9604 6.25461,15.9604 C5.62861,16.9634 5.41059,18.0914 5.47059,19.0594 C5.52461,20.0343 5.83058,20.8484 6.09158,21.4004 C6.14462,21.5073 6.19162,21.5993 6.23459,21.6823 C6.25058,21.7353 6.3906,21.9433 6.43961,22.0283 C6.57261,22.2464 6.64359,22.3623 6.64359,22.3623 C7.21465,23.2883 6.90764,24.4953 5.95962,25.0523 C5.15259,25.5273 4.14457,25.3833 3.50851,24.7583 L3.15651,24.4143 C3.15651,24.4143 3.05653,24.3153 2.8675,24.1303 C2.67951,23.9523 2.40753,23.6643 2.07848,23.2563 C1.4755,22.4473 0.664446,21.1703 0.216437,19.3354 C-0.169559,17.5204 -0.105531,15.1484 0.956445,12.7964 C1.45951,11.6114 2.27648,10.5154 3.26454,9.53144 C4.25456,8.54444 5.46461,7.72646 6.77561,7.13946 C8.07966,6.54446 9.47166,6.15448 10.8467,5.94647 C12.0118,5.83145 13.1588,5.71946 14.2688,5.61048 C16.3368,5.44346 18.2669,5.35947 19.9199,5.33549 C20.416,5.33146 20.877,5.33549 21.32,5.34348 L21.32,1.18251 C21.32,0.716507 21.5949,0.292529 22.024,0.104512 C22.1833,0.032141 22.3537,-0.001981 22.5228,8.9E-05 z" />-->
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="UndoButton">
        <Style.Resources>
            <CornerRadius x:Key="ButtonCornerRadius"
                          TopLeft="2.5"
                          TopRight="2.5"
                          BottomLeft="2.5"
                          BottomRight="2.5" />
            <system:Double x:Key="ButtonWidth">22</system:Double>
            <system:Double x:Key="ButtonHeight">22</system:Double>
        </Style.Resources>
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{DynamicResource ButtonHeight}"
                          Width="{DynamicResource ButtonWidth}">
                        <Border x:Name="brd"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="5"
                                Background="{DynamicResource MGrey3}"
                                BorderBrush="{DynamicResource MGrey3}" />
                        <Border x:Name="mouseover"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="pressed"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                BorderBrush="Transparent"
                                Opacity="0" />
                        <Border x:Name="focused"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="{DynamicResource MGrey3}"
                                Opacity="0" />
                        <Border x:Name="enabled"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="6"
                                Background="White"
                                BorderBrush="White"
                                Opacity="0" />
                        <Border x:Name="content"
                                CornerRadius="{DynamicResource ButtonCornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="Transparent">
                            <Border.Width>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <mtxm:ExpressionConverter ExpressionType="ReturnObject"
                                                                  ReturnName="__result">
                                            <mtxm:ExpressionConverter.Expression>
                                                <![CDATA[
													double NaN = Double.NaN;
													double x = double.IsNaN({0}) ? 0.0 : (double){0};
													double y = double.IsNaN({1}) ? 0.0 : (double){1};
													__result = x < y ? x : y;
												]]>
                                            </mtxm:ExpressionConverter.Expression>
                                        </mtxm:ExpressionConverter>
                                    </MultiBinding.Converter>
                                    <mtxm:BindTo Path="ancestor.Grid.Width" />
                                    <mtxm:BindTo Path="ancestor.Grid.Height" />
                                </MultiBinding>
                            </Border.Height>
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Path Width="15"
                                                  Height="15"
                                                  Fill="White"
                                                  Stretch="Uniform"
                                                  UseLayoutRounding="False"
                                                  Data="F1 M146.061,295.33301 L146.061,324.224 C232.2,324.224 305.49899,256.811 305.49899,162.647 C305.49899,68.482697 220.964,5.3506799 148.201,5.3506799 C75.437302,5.3506799 44.4067,44.406601 44.4067,44.406601 L0,0 L0,165.323 L165.321,165.323 L119.043,119.043 C132.151,105.935 155.692,100.584 171.207,100.584 C207.47701,100.584 249.856,132.687 249.856,183.513 C249.856,234.34 208.66,295.33301 146.061,295.33301 z" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="PreviewButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="32.8987"
                                                      Height="32.8987"
                                                      Canvas.Left="22.5179"
                                                      Canvas.Top="22.1667"
                                                      Stretch="Fill"
                                                      Fill="White"
                                                      Data="F1 M 23.4454,49.2637L 31.7739,41.1598C 30.6986,39.2983 30.4792,37.1377 30.4792,34.8333C 30.4792,27.8377 35.7544,22.1667 42.75,22.1667C 49.7456,22.1667 55.4167,27.8377 55.4167,34.8333C 55.4167,41.8289 49.7456,47.1042 42.75,47.1042C 40.5639,47.1042 38.5072,46.9462 36.7125,45.9713L 28.3196,54.1379C 27.0829,55.3746 24.6821,55.3746 23.4454,54.1379C 22.2088,52.9013 22.2088,50.5004 23.4454,49.2637 Z M 42.75,26.9167C 38.3777,26.9167 34.8333,30.4611 34.8333,34.8333C 34.8333,39.2056 38.3777,42.75 42.75,42.75C 47.1222,42.75 50.6667,39.2056 50.6667,34.8333C 50.6667,30.4611 47.1222,26.9167 42.75,26.9167 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="6"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="TrendingButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Data="M10.716961,50.122786 L28.750058,31.749943 40.12512,43.749864 50.125174,33.874929 57.000211,38.624898 67.875369,25.124987 C67.875369,25.124987 74.750306,31.749946 74.500306,31.374946 74.250306,30.999946 58.500302,50.499819 58.500302,50.499819 L50.125174,43.999862 40.000163,53.499796 29.125061,41.749877 16.249991,54.249793 z"
                                                      Fill="White"
                                                      Height="29.125"
                                                      Canvas.Left="10.717"
                                                      Stretch="Fill"
                                                      Canvas.Top="25.125"
                                                      Width="63.79" />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="6"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="SaveButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MGrey5}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="36"
                                                      Height="36"
                                                      Canvas.Left="20"
                                                      Canvas.Top="20"
                                                      Stretch="Fill"
                                                      Fill="White"
                                                      Data="F1 M 20,20L 50.25,20L 56,25.75L 56,56L 20,56L 20,20 Z M 52,27.25L 48.75,24L 48,24L 48,37L 28,37L 28,24L 24,24L 24,52L 52,52L 52,27.25 Z M 39,24L 39,34L 44,34L 44,24L 39,24 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="AddButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!--<Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="39.1525"
                                                      Height="34.6742"
                                                      Canvas.Left="18.5595"
                                                      Canvas.Top="19.0795"
                                                      Stretch="Fill"
                                                      Fill="White"
                                                      Data="F1 M 32.6339,50.8752L 46.6287,36.8803C 48.4837,35.0253 48.4837,32.0178 46.6287,30.1628C 44.7737,28.3078 41.7662,28.3078 39.9112,30.1629L 28.7154,41.3587L 30.9545,43.5979L 42.1504,32.402C 42.7687,31.7836 43.7712,31.7836 44.3895,32.402C 45.0079,33.0203 44.4481,33.463 43.8298,34.0814L 29.835,48.0762C 28.2891,49.622 26.3426,50.1818 24.7968,48.636C 23.251,47.0902 23.251,44.5839 24.7968,43.0381L 42.1504,25.6845C 44.6237,23.2112 48.6338,23.2112 51.1071,25.6845C 53.5804,28.1578 53.5804,32.1679 51.1071,34.6412L 37.6721,48.0762L 41.0308,51.435L 54.4658,38C 58.7941,33.6716 58.7941,26.6541 54.4658,22.3258C 50.1375,17.9975 43.1199,17.9975 38.7916,22.3258L 20.8783,40.2391C 17.7866,43.3308 17.7866,48.3433 20.8783,51.435C 23.9699,54.5266 28.9825,54.5266 32.0741,51.435L 32.6063,50.8476L 32.6339,50.8752 Z " />
                                            </Canvas>-->
                                            <Path Width="76"
                                                    Height="76" Stretch="Fill" UseLayoutRounding="False" Fill="White" Data="F1 M 2.88,17.2725C 0.959991,15.3475 0,12.95 0,10.08C 0,7.21002 0.959991,4.8125 2.88,2.88751C 4.80002,0.962494 7.19125,0 10.0537,0C 12.9163,0 15.3163,0.962494 17.2538,2.88751C 19.1913,4.8125 20.16,7.21002 20.16,10.08C 20.16,12.95 19.1913,15.3475 17.2538,17.2725C 15.3163,19.1975 12.9163,20.16 10.0537,20.16C 7.19125,20.16 4.80002,19.1975 2.88,17.2725 Z M 3.84,11.3625L 8.81998,11.3625L 8.81998,16.32L 11.34,16.32L 11.34,11.3625L 16.32,11.3625L 16.32,8.85001L 11.34,8.85001L 11.34,3.84L 8.81998,3.84L 8.81998,8.85001L 3.84,8.85001L 3.84,11.3625 Z "/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="DeleteButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource MPink}"
                                BorderBrush="{StaticResource MDarkPink}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource MDarkPink}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource MDarkPink}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{StaticResource MPink}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!--<Canvas  Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="27.7083" Height="35.625" Canvas.Left="24.1458" Canvas.Top="19.7917" Stretch="Fill" Fill="White" Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>
                                            </Canvas>-->
                                            <Canvas  Width="76"
                                                     Height="76"
                                                     Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="23.3774"
                                                      Height="23.46"
                                                      Stretch="Uniform"
                                                      Fill="White"
                                                      Data="F1 M 4.70432,0L 0.0480347,4.77802L 7.00842,11.6812L 0,18.7292L 4.70432,23.46L 11.6647,16.412L 18.6252,23.46L 23.3774,18.7774L 16.369,11.6812L 23.3294,4.77802L 18.6252,0L 11.6647,6.9986L 4.70432,0 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="CancelButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="6"
                                Background="{DynamicResource MBlue}"
                                BorderBrush="{DynamicResource MBlue}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{DynamicResource MDBlue}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{DynamicResource MBlue}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!-- Refresh Button icon
                                            <Canvas   Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Fill" Fill="White" Data="F1 M 19,57L 34,57L 34,42L 28.8076,47.1924C 26.4551,44.8399 25,41.5899 25,38C 25,30.8203 30.8203,25 38,25C 45.1797,25 51,30.8203 51,38C 51,42.6137 48.5965,46.6661 44.9734,48.9734L 49.2862,53.2862C 53.9658,49.8254 57,44.2671 57,38C 57,27.5066 48.4934,19 38,19C 27.5066,19 19,27.5066 19,38C 19,43.2467 21.1266,47.9967 24.565,51.435L 19,57 Z "/>
                                            </Canvas-->
                                            <!--  Circle with cross thru it -->
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="38"
                                                      Height="38"
                                                      Canvas.Left="19"
                                                      Canvas.Top="19"
                                                      Stretch="Fill"
                                                      Fill="White"
                                                      Data="F1 M 38,19C 48.4934,19 57,27.5066 57,38C 57,48.4934 48.4934,57 38,57C 27.5066,57 19,48.4934 19,38C 19,27.5066 27.5066,19 38,19 Z M 38,23.75C 35.2116,23.75 32.6102,24.5509 30.4134,25.9352L 50.0648,45.5866C 51.4491,43.3898 52.25,40.7884 52.25,38C 52.25,30.13 45.87,23.75 38,23.75 Z M 23.75,38C 23.75,45.8701 30.1299,52.25 38,52.25C 40.7884,52.25 43.3897,51.4491 45.5865,50.0649L 25.9351,30.4136C 24.5509,32.6103 23.75,35.2117 23.75,38 Z " />
                                            </Canvas>

                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="DownloadButton">
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="{StaticResource btnSize}"
                          Width="{StaticResource btnSize}">
                        <Border x:Name="brd"
                                CornerRadius="2.5"
                                Padding="6"
                                Background="{StaticResource MGreen}"
                                BorderBrush="{StaticResource MGreen}">
                        </Border>
                        <Border x:Name="mouseover"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource MGrey5}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="pressed"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource MGreen}"
                                Opacity="0"
                                BorderBrush="Transparent" />
                        <Border x:Name="focused"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                Opacity="0"
                                BorderBrush="{StaticResource MGreen}" />
                        <Border x:Name="content"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="Transparent"
                                Background="Transparent">
                            <Rectangle x:Name="rct"
                                       StrokeThickness="0"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <!--  Download Icon -->
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="35.4775"
                                                      Height="35.4776"
                                                      Canvas.Left="20.9792"
                                                      Canvas.Top="19.5431"
                                                      Stretch="Uniform"
                                                      Fill="White"
                                                      Data="F1 M 74.9329,1.52588e-005L 105.334,28.9531L 105.334,133.333L 0,133.333L 0,1.52588e-005L 74.9329,1.52588e-005 Z M 77.334,13.3347L 77.334,26.6667L 91.3339,26.6667L 77.334,13.3347 Z M 7.99997,125.333L 97.3339,125.333L 97.3339,34.6667L 69.334,34.6667L 69.334,8.00005L 7.99997,8.00005L 7.99997,125.333 Z M 61.3613,74.6198L 86.6451,49.3334L 86.6451,73.3334L 52.6666,107.313L 18.6894,73.3334L 18.6894,49.3334L 44.028,74.6733L 44.028,24L 61.3613,24L 61.3613,74.6198 Z " />
                                                <!--<Path Width="35.4775" Height="35.4776" Canvas.Left="20.9792" Canvas.Top="19.5431" Stretch="Uniform" Fill="White" 
                                                      Data="F1 M 40.972,77.2199C 39.5052,75.4609 40.3575,72.5611 42.8998,72.5611L 52.8718,72.5611L 52.8718,29.3802C 52.8718,27.8918 54.1134,26.6503 55.6016,26.6503L 77.7318,26.6503C 79.22,26.6503 80.461,27.8918 80.461,29.3802L 80.461,72.5611L 90.4336,72.5611C 92.9765,72.5611 93.8281,75.4609 92.362,77.2199L 68.5964,105.772C 68.0156,106.471 67.3281,106.725 66.6667,106.68C 66.0052,106.725 65.3216,106.471 64.7376,105.772L 40.972,77.2199 Z M 66.6667,133.333C 29.8483,133.333 0,103.486 0,66.6666C 0,29.8476 29.8483,-3.05176e-005 66.6667,-3.05176e-005C 103.484,-3.05176e-005 133.333,29.8476 133.333,66.6666C 133.333,103.486 103.484,133.333 66.6667,133.333 Z M 66.6667,10.6667C 35.7403,10.6667 10.6667,35.7389 10.6667,66.6666C 10.6667,97.5937 35.7403,122.667 66.6667,122.667C 97.5937,122.667 122.667,97.5937 122.667,66.6666C 122.667,35.7389 97.5937,10.6667 66.6667,10.6667 Z ">
                                                </Path>-->
                                            </Canvas>

                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="enabled"
                                CornerRadius="2.5"
                                Padding="{TemplateBinding Padding}"
                                Background="White"
                                Opacity="0"
                                BorderBrush="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="mouseover"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="pressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter TargetName="focused"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="enabled"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <!-- TextBox -->
    <Style x:Key="SearchTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="custom1:TextboxHelper.IsMonitoring"
                Value="True" />
        <Setter Property="SelectionBrush"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource ContentFontSize}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="MinHeight"
                Value="26" />
        <Setter Property="Background"
                Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Base" Fill="{TemplateBinding Background}" Opacity="1" Stroke="{TemplateBinding BorderBrush}">
                          
                        </Rectangle>
                        <Rectangle x:Name="FocusRectangle" Opacity="0" Stroke="{DynamicResource BorderBrush}">
                       
                        </Rectangle>
                        <Grid Margin="2">
                            <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Opacity="0"/>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" IsTabStop="False" Margin="2" VerticalAlignment="Stretch"/>
                            <TextBlock x:Name="Message" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="6,0,0,0" Opacity="0.6" Text="{TemplateBinding custom1:TextboxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Button x:Name="PART_ClearText" Content="r" Foreground="{TemplateBinding Foreground}" FontFamily="Marlett" HorizontalAlignment="Right" IsTabStop="False" Style="{DynamicResource ChromelessButtonStyle}" Width="20">
                                <Button.Visibility>
                                    <Binding Path="(custom1:TextboxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{DynamicResource ControlsDisabledBrush}">
                          
                        </Rectangle>
                        <Border x:Name="ValidationErrorElement" BorderBrush="{DynamicResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                            <Border.ToolTip>
                                <ToolTip x:Name="validationTooltip" Placement="Right" Template="{DynamicResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <system:Boolean>True</system:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </Border.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="{DynamicResource ValidationBrush5}" Margin="1,3,0,0"/>
                                <Path Data="M0,0L2,0 8,6 8,8" Fill="{DynamicResource WhiteColorBrush}" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (custom1:TextboxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Margin" TargetName="PART_ContentHost" Value="2,2,20,2"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="FocusRectangle" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusRectangle" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush5}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="custom1:TextboxHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="custom1:TextboxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="Button"
           x:Key="CloseButtonHorizontal">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Width"
                Value="26" />
        <Setter Property="Height"
                Value="18" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Rectangle x:Name="rct"
                                   Fill="{TemplateBinding Background}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Visual="{StaticResource appbar_clear_reflect_horizontal}"
                                             Stretch="Fill" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="rct"
                                    Property="Fill"
                                    Value="{DynamicResource MGrey5}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="rct"
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Visual="{StaticResource appbar_clear_inverse_reflect_horizontal}"
                                                 Stretch="Fill" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true" />

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="rct"
                                    Property="Fill"
                                    Value="{DynamicResource MGrey2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="CloseButton">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Width"
                Value="26" />
        <Setter Property="Height"
                Value="18" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Rectangle x:Name="rct"
                                   Fill="{TemplateBinding Background}">
                            <Rectangle.OpacityMask>
                                <VisualBrush  Stretch="Fill">
                                    <VisualBrush.Visual>
                                        <Border Name="brdclose">
                                            <Canvas Width="76"
                                                    Height="76"
                                                    Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                <Path Width="35.8286"
                                                      Height="38"
                                                      Canvas.Left="20.1857"
                                                      Canvas.Top="19"
                                                      Stretch="Fill"
                                                      Fill="#FF000000"
                                                      Data="F1 M 56.0143,57L 45.683,57L 39.0246,44.6245C 38.7758,44.1665 38.5156,43.3183 38.2442,42.0799L 38.1339,42.0799C 38.0095,42.6623 37.7127,43.5473 37.2433,44.7348L 30.5594,57L 20.1857,57L 32.5018,38L 21.2714,19L 31.8487,19L 37.3621,30.3915C 37.7918,31.2963 38.1763,32.365 38.5156,33.5977L 38.6259,33.5977C 38.8408,32.857 39.2394,31.7543 39.8219,30.2897L 45.8951,19L 55.4714,19L 44.0969,37.8388L 56.0143,57 Z " />
                                            </Canvas>
                                        </Border>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="rct"
                                    Property="Fill"
                                    Value="{DynamicResource MGrey5}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="brdclose"
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush  Stretch="Fill">
                                        <VisualBrush.Visual>
                                            <Border>
                                                <Canvas Width="76"
                                                        Height="76"
                                                        Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                                    <Path Width="35.8286"
                                                          Height="38"
                                                          Canvas.Left="20.1857"
                                                          Canvas.Top="19"
                                                          Stretch="Fill"
                                                          Fill="#FF000000"
                                                          Data="F1 M 56.0143,57L 45.683,57L 39.0246,44.6245C 38.7758,44.1665 38.5156,43.3183 38.2442,42.0799L 38.1339,42.0799C 38.0095,42.6623 37.7127,43.5473 37.2433,44.7348L 30.5594,57L 20.1857,57L 32.5018,38L 21.2714,19L 31.8487,19L 37.3621,30.3915C 37.7918,31.2963 38.1763,32.365 38.5156,33.5977L 38.6259,33.5977C 38.8408,32.857 39.2394,31.7543 39.8219,30.2897L 45.8951,19L 55.4714,19L 44.0969,37.8388L 56.0143,57 Z " />
                                                </Canvas>
                                            </Border>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true" />

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="rct"
                                    Property="Fill"
                                    Value="{DynamicResource MGrey2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGrid -->

    <Style x:Key="ColumnHeaderGripperStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Width"
                Value="8" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqDataImportGridColumnHeader"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <microsoftWindowsThemes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}"
                                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                                     IsClickable="{TemplateBinding CanUserSort}"
                                                                     IsPressed="{TemplateBinding IsPressed}"
                                                                     IsHovered="{TemplateBinding IsMouseOver}"
                                                                     Padding="{TemplateBinding Padding}"
                                                                     SortDirection="{TemplateBinding SortDirection}"
                                                                     SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                                     Background="#FFE4E4E4">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="5" />
                        </microsoftWindowsThemes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}"
           x:Key="MonahrqCellStyle">
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="#FFDCFBD7" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}"
           x:Key="MonahrqRowStyle">
        <Setter Property="Height"
                Value="50" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                               Value="true" />
                    <Condition Property="IsFocused"
                               Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background"
                            Value="Tomato" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="#FFDCFBD7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MonahrqDataImportGridExportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="27.927" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="PressedBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MPink}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{x:Null}"
                                OpacityMask="Black"
                                Margin="3">

                            <Rectangle  Margin="3"
                                        RadiusY="0"
                                        RadiusX="0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cabinet_out_dark}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqDataImportGridImportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="#FF727272" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="27.927" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="PressedBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MPink}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{x:Null}"
                                OpacityMask="Black"
                                Margin="3">

                            <Rectangle  Margin="3"
                                        RadiusY="0"
                                        RadiusX="0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cabinet_in_dark}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonahrqDataGridDeleteButton"
           TargetType="{x:Type Button}">
        <Setter Property="MaxHeight"
                Value="16" />
        <Setter Property="MaxWidth"
                Value="16" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0">
                            <Border.Background>
                                <SolidColorBrush Color="#FFFFA9A9" />
                            </Border.Background>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource GrayBrush8}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="0"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"
                                   StrokeThickness="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverBorderBrush}"
                                   Margin="0"
                                   StrokeThickness="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed" />
                        <Rectangle RadiusY="0"
                                   RadiusX="0"
                                   Stroke="#FF2B2B2B" />
                        <Path Data="M0.28709229,0.010731069 L14.790299,14.785033"
                              Margin="0.287,0.011,0.21,0.215"
                              Stretch="Fill"
                              Stroke="#FF2B2B2B" />
                        <Path Data="M0.10700132,14.875055 L14.880578,0.14651696"
                              Margin="0.107,0.146,0.119,0.125"
                              Stretch="Fill"
                              Stroke="#FF2B2B2B" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="PressedBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Grid.ColumnSpan="1"
                                Background="White" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="1" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="1" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MPink}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="1" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="1" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Hidden" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="0"
                                Background="{x:Null}"
                                OpacityMask="Black"
                                Margin="0"
                                VerticalAlignment="Stretch">

                            <Rectangle  Margin="3"
                                        RadiusY="0"
                                        RadiusX="0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_corner}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridBoxItemButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey4}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Mapping">
                                <VisualState x:Name="IsMapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="mappedRect">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="unmappedRect">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IsNotMapped" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0">
                            <Border.Background>
                                <SolidColorBrush Color="White" />
                            </Border.Background>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource GrayBrush8}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"
                                   StrokeThickness="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Stroke="{DynamicResource TextBoxMouseOverBorderBrush}"
                                   StrokeThickness="0" />
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="31.921" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                              Margin="10,6,0,6"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.ColumnSpan="1" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12.171" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="13.75" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="13.25" />
                                    <RowDefinition />
                                    <RowDefinition Height="12.263" />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="unmappedRect"
                                           RadiusY="0"
                                           Grid.Row="1"
                                           RadiusX="0"
                                           Stroke="Black"
                                           StrokeThickness="0"
                                           Grid.ColumnSpan="1"
                                           Grid.Column="1">

                                    <Rectangle.Fill>
                                        <VisualBrush Visual="{StaticResource appbar_question}" />
                                    </Rectangle.Fill>

                                </Rectangle>

                                <Rectangle x:Name="mappedRect"
                                           RadiusY="0"
                                           Grid.Row="1"
                                           RadiusX="0"
                                           Stroke="Black"
                                           StrokeThickness="0"
                                           Grid.ColumnSpan="1"
                                           Grid.Column="1"
                                           Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <VisualBrush Visual="{StaticResource appbar_check}" />
                                    </Rectangle.Fill>

                                </Rectangle>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Panels -->
    <ItemsPanelTemplate x:Key="ItemsPanelHorizontal">
        <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="ItemsPanelVertical">
        <StackPanel Orientation="Vertical" />
    </ItemsPanelTemplate>
    <!-- TEXT -->
    <Style x:Key="WizardHeader"
           TargetType="TextBox">
        <Setter Property="FontSize"
                Value="24" />
        <Setter Property="Foreground"
                Value="#FF4B4B4B" />
    </Style>

    <!--WEBSITES VIEWS -->
    <Style x:Key="WebsiteSettingsButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey1}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="31.167" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="PressedBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FFFD7B7B"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{x:Null}"
                                OpacityMask="Black"
                                Margin="3">

                            <Rectangle  Margin="3"
                                        RadiusY="0"
                                        RadiusX="0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cogs_grey}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WebsiteExportButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource MGrey1}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown1" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="31.167" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="PressedBorder">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                CornerRadius="0"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FFFD7B7B"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={Custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{x:Null}"
                                OpacityMask="Black"
                                Margin="3">

                            <Rectangle  Margin="3"
                                        RadiusY="0"
                                        RadiusX="0">
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cabinet_out_grey}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MappingTabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{DynamicResource MGrey2}"
                            Padding="6,7"
                            Margin="0,0,6,-3">
                        <Label x:Name="root"
                               FontSize="16">
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFD9EFF9" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF626262" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="root"
                                 Value="True">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MappingTabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  IsItemsHost="True"
                                  Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1"
                                  Panel.ZIndex="1"
                                  HorizontalAlignment="Right"
                                  Margin="0,0,-3,0" />
                        <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{DynamicResource MGrey2}"
                            Padding="6,7"
                            Margin="0,0,6,-3">
                        <Label x:Name="root"
                               FontSize="16">
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF41B0E0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF626262" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 SourceName="root"
                                 Value="True">
                            <Setter Property="Foreground"
                                    TargetName="root">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="TextBox">
        <Setter Property="FontSize" Value="13.3"/>
    </Style>-->

    <Style x:Key="TabItemStyleLeft"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{DynamicResource MGrey3}"
                            Padding="3,4"
                            Margin="0,0,6,-3">
                        <ContentPresenter x:Name="root"
                                          Margin="2,3"
                                          ContentSource="Header"
                                          TextBlock.FontSize="12"
                                          RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="root"
                                    Value="White" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FF41B0E0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyleLeftValidation"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="border"
                            Background="{DynamicResource MGrey3}"
                            Padding="3,4"
                            Margin="0,0,6,-3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".75*" />
                                <ColumnDefinition Width="0.25*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  x:Name="root"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               ContentSource="Header"
                                               Margin="2,3"
                                               Grid.Column="1"
                                               TextBlock.FontSize="12"
                                               RecognizesAccessKey="True" />
                            <Border Grid.Column="0"
                                    DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}"
                                    Background="{Binding TemplateBinding}"
                                    Visibility="{Binding RelativeSource={RelativeSource  FindAncestor, AncestorType=TabItem}, Path=Tag, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    HorizontalAlignment="Left">
                                <Canvas VerticalAlignment="Center"
                                        Background="{Binding TenplateBinding}"
                                        Margin="2,0,3,0"
                                        Height="20"
                                        Width="20">
                                    <Image Source="/Monahrq.Theme;component/Resources/error.png"
                                           Width="20"
                                           Height="20" />
                                </Canvas>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="root"
                                    Value="White" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FF41B0E0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  IsItemsHost="True"
                                  Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1"
                                  Panel.ZIndex="1"
                                  HorizontalAlignment="Right"
                                  Margin="0,0,-3,0" />
                        <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStyleLeft"
           TargetType="{x:Type TabControl}">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  IsItemsHost="True"
                                  Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1"
                                  Panel.ZIndex="1"
                                  HorizontalAlignment="Left"
                                  Margin="3,0,0,0" />
                        <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImportDataFileButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          RecognizesAccessKey="True"
                                          HorizontalAlignment="Left"
                                          Margin="9,0,0,0"
                                          VerticalAlignment="Center" />
                        <Border BorderBrush="{x:Null}"
                                Padding="4"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{DynamicResource MGrey5}">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <VisualBrush Visual="{StaticResource appbar_cabinet_in}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddDataFileButton"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background"
                Value="{DynamicResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=root, Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Grid.ColumnSpan="2" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="#FF93C6F5"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="0"
                                Background="{DynamicResource GrayBrush5}"
                                CornerRadius="0"
                                Opacity="0"
                                Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusRectangle"
                                   Margin="-1"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   Fill="#FF93C6F5"
                                   Grid.ColumnSpan="2" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   RadiusY="0"
                                   RadiusX="0"
                                   StrokeThickness="1"
                                   Grid.ColumnSpan="2" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          RecognizesAccessKey="True"
                                          HorizontalAlignment="Left"
                                          Margin="9,0,0,0"
                                          VerticalAlignment="Center" />
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="1"
                                Grid.Column="1"
                                Background="{DynamicResource MGrey5}">
                            <Grid Margin="-1">
                                <Rectangle Fill="White"
                                           Margin="0"
                                           RadiusY="0"
                                           RadiusX="0"
                                           Width="2"
                                           Height="14"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                                <Rectangle Fill="White"
                                           Height="2"
                                           Margin="0"
                                           RadiusY="0"
                                           RadiusX="0"
                                           VerticalAlignment="Center"
                                           Width="13"
                                           HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TEXT HEADER STYLES -->
    <Style x:Key="MainHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping"
                Value="NoWrap" />
        <Setter Property="TextTrimming"
                Value="None" />
        <Setter Property="FontFamily"
                Value="Segoe UI Semibold" />
        <Setter Property="FontSize"
                Value="27" />
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style x:Key="RootContentGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Margin"
                Value="20,0,20,20" />
    </Style>

    <Style x:Key="Subtopic"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming"
                Value="None" />
        <Setter Property="Foreground"
                Value="{StaticResource MGrey4}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontFamily"
                Value="Segoe UI Semibold" />
    </Style>

    <Style x:Key="Header1"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="{StaticResource MGrey5}" />
        <Setter Property="FontSize"
                Value="23" />
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style x:Key="Header3"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="{StaticResource MGrey5}" />
        <Setter Property="FontSize"
                Value="18.667" />
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style x:Key="SectionHeader"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{StaticResource MGrey4}" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="FontFamily"
                Value="Segoi UI" />
    </Style>

    <Style x:Key="LinkButton"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="{StaticResource MBlue}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{StaticResource MGrey5}" />
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ViewSampleLinkButton"
           TargetType="{x:Type Button}">
        <Setter Property="FontStyle"
                Value="Italic" />
        <Setter Property="Foreground"
                Value="Blue" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="2,0,2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <Trigger Property="TextBlock.IsMouseOver"
                                             Value="True">
                                        <Setter Property="TextBlock.TextDecorations"
                                                Value="Underline" />
                                        <Setter Property="TextBlock.FontWeight"
                                                Value="Bold" />
                                        <Setter Property="TextBlock.Cursor"
                                                Value="Hand"></Setter>
                                    </Trigger>
                                    <Trigger Property="TextBlock.IsMouseOver"
                                             Value="False">
                                        <Setter Property="TextBlock.TextDecorations"
                                                Value="None" />
                                        <Setter Property="TextBlock.FontWeight"
                                                Value="Normal" />
                                        <Setter Property="TextBlock.Cursor"
                                                Value="None"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** RadioButton Style **********************************-->
    <Style TargetType="RadioButton"
           BasedOn="{StaticResource CommonStyle}">
        <Setter Property="Foreground"
                Value="#FF585858" />
        <Setter Property="FontSize"
                Value="16" />
        <!-- 14.667 -->
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="6,0,0,0" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="MinWidth"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="Checked1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="focused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidUnfocused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidFocused" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent"
                                   Margin="-6,0" />
                        <Ellipse x:Name="normal"
                                 Opacity="1"
                                 Stroke="#FFB9B9B9"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="hover"
                                 Stroke="#FF858585"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Opacity="0"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="pressed"
                                 Opacity="0"
                                 Stroke="#FF00AADE"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="focused"
                                 Opacity="0"
                                 Stroke="#FF00AADE"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="invalidUnfocused"
                                 Opacity="0"
                                 Stroke="#FFF55E7F"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="invalidFocused"
                                 Opacity="0"
                                 Stroke="#FFD0284C"
                                 StrokeThickness="1"
                                 Fill="#FFFFFFFF"
                                 Width="18"
                                 Height="18" />
                        <Ellipse x:Name="Checked1"
                                 Fill="#FF00AADE"
                                 Opacity="0"
                                 Width="10"
                                 Height="10" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Ellipse x:Name="disabled"
                                 Opacity="0"
                                 StrokeThickness="1"
                                 Fill="#99FFFFFF"
                                 Width="18"
                                 Height="18" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border 
          Name="Border"
          Padding="2"
          SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background"
                    Value="{StaticResource SelectedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                    Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="{x:Type ListBoxItem}" TargetType= "ListBoxItem">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                        <Rectangle x:Name="fillColor2" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="MonahrqListBoxStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="Transparent"
                    CornerRadius="8"
                    BorderThickness="3"
                    x:Name="IconBorder"
                    Margin="8,4,8,4" >
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="IconBorder" Property="Background" >
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource MBlue}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>